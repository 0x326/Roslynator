<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3AD7B124-7B99-440D-84A1-858BE5AE268B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Pihrtsoft.CodeAnalysis.CSharp</RootNamespace>
    <AssemblyName>Pihrtsoft.CodeAnalysis.CSharp.Refactorings</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>Profile7</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\..\Pihrtsoft.CodeAnalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\..\Pihrtsoft.CodeAnalysis.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="CodeRefactoringProviders\InterpolatedStringCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\StatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\LambdaExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\SwitchStatementCodeRefactoringProvider_.cs" />
    <Compile Include="CodeRefactoringProviders\InitializerExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\BinaryExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\StringLiteralExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\FieldDeclarationCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\GenericNameCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\RenameFieldAccordingToPropertyNameCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\InvocationExpressionCodeRefactoringProvider_.cs" />
    <Compile Include="CodeRefactoringProviders\LocalDeclarationStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ArgumentCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\AssignmentExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ConvertToInterpolatedStringRefactoringCodeProvider.cs" />
    <Compile Include="CodeRefactoringProviders\DoStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ExpandExpressionBodiedMemberCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ForStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ObjectInitializerCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\MemberAccessExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ParenthesizedExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\IfStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\RegionDirectiveTriviaCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\UncommentCodeRefactoringProvider.cs" />
    <Compile Include="IfElseChainAnalysisResult.cs" />
    <Compile Include="Refactoring\AddBracesToEmbeddedStatementRefactoring.cs" />
    <Compile Include="Refactoring\AddParameterNullCheckRefactoring.cs" />
    <Compile Include="Refactoring\ArgumentRefactoring.cs" />
    <Compile Include="Refactoring\CommentRefactoring.cs" />
    <Compile Include="Refactoring\MethodDeclarationRefactoring.cs" />
    <Compile Include="Refactoring\NullableBooleanRefactoring.cs" />
    <Compile Include="Refactoring\StringLiteralRefactoring.cs" />
    <Compile Include="Refactoring\StringEmptyRefactoring.cs" />
    <Compile Include="Refactoring\ExpandExpressionBodiedMemberRefactoring.cs" />
    <Compile Include="Refactoring\ExpressionChainRefactoring.cs" />
    <Compile Include="Refactoring\ExtractStatementRefactoring.cs" />
    <Compile Include="Refactoring\FormatBinaryExpressionRefactoring.cs" />
    <Compile Include="Refactoring\MakeMemberAbstractRefactoring.cs" />
    <Compile Include="Refactoring\RemoveBracesFromStatementRefactoring.cs" />
    <Compile Include="Refactoring\RemoveModifierRefactoring.cs" />
    <Compile Include="Refactoring\RenameParameterAccordingToTypeNameRefactoring.cs" />
    <Compile Include="Refactoring\SimplifyLambdaExpressionRefactoring.cs" />
    <Compile Include="Refactoring\ConvertSwitchToIfElseRefactoring.cs" />
    <Compile Include="CodeRefactoringProviders\CloseParenTokenCodeCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\PostfixUnaryExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\PrefixUnaryExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\PropertyDeclarationCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\MethodDeclarationCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\CommaTokenCodeCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\SyntaxTriviaCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ParameterCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\LiteralExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\SimpleLambdaExpressionCodeCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\VariableDeclarationCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\SyntaxTokenCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\UsingStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\WhileStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ForEachStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ParameterListCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ArgumentListCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\ConditionalExpressionCodeCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\SwitchStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\SwitchSectionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactoringProviders\DeclarationCodeRefactoringProvider_.cs" />
    <Compile Include="Extensions\CodeRefactoringContextExtensions.cs" />
    <Compile Include="Refactoring\ConditionalExpressionToIfElseRefactoring.cs" />
    <Compile Include="Refactoring\ForEachToForRefactoring.cs" />
    <Compile Include="Refactoring\ReverseForRefactoring.cs" />
    <Compile Include="Refactoring\ForToForEachRefactoring.cs" />
    <Compile Include="SyntaxRewriters\RemoveParameterNameSyntaxRewriter.cs" />
    <Compile Include="SyntaxRewriters\AddParameterNameSyntaxRewriter.cs" />
    <Compile Include="SyntaxRewriters\InterpolatedStringSyntaxRewriter.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="CodeRefactoringProviders\MemberDeclarationCodeRefactoringProvider.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Common.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Workspaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Workspaces.Common.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Collections.Immutable, Version=1.1.36.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\System.Collections.Immutable.1.1.36\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.AttributedModel, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.AttributedModel.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Convention, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Convention.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Hosting, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Hosting.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Runtime, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Runtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.TypedParts, Version=1.0.27.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.TypedParts.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Reflection.Metadata, Version=1.0.21.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\System.Reflection.Metadata.1.0.21\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Pihrtsoft.CodeAnalysis.Common\Pihrtsoft.CodeAnalysis.Common.csproj">
      <Project>{34a3e42e-2254-4ee7-a152-eedb18e3d7e3}</Project>
      <Name>Pihrtsoft.CodeAnalysis.Common</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="..\..\packages\CSharpAnalyzers.0.9.11.0\analyzers\dotnet\cs\Pihrtsoft.CodeAnalysis.Common.dll" />
    <Analyzer Include="..\..\packages\CSharpAnalyzers.0.9.11.0\analyzers\dotnet\cs\Pihrtsoft.CodeAnalysis.CSharp.dll" />
    <Analyzer Include="..\..\packages\Microsoft.CodeAnalysis.Analyzers.1.0.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.Analyzers.dll" />
    <Analyzer Include="..\..\packages\Microsoft.CodeAnalysis.Analyzers.1.0.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.Analyzers.dll" />
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\v4.6\Microsoft.Portable.CSharp.targets" />
  <Target Name="AfterBuild">
    <GetAssemblyIdentity AssemblyFiles="$(OutDir)\$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="AnalyzerAssemblyInfo" />
    </GetAssemblyIdentity>
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>