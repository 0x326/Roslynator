<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{34A3E42E-2254-4EE7-A152-EEDB18E3D7E3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Roslynator</RootNamespace>
    <AssemblyName>Roslynator.Utilities</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\..\Roslynator.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\..\Roslynator.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>Roslynator.Utilities.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="AsyncMethodNameGenerator.cs" />
    <Compile Include="CSharp\BracesAnalysisResult.cs" />
    <Compile Include="CSharp\CSharpErrorCodes.cs" />
    <Compile Include="CSharp\Extensions\CSharpExtensions.cs" />
    <Compile Include="CSharp\CSharpGeneratedCodeAnalyzer.cs" />
    <Compile Include="CSharp\Internal\LogicalNegationHelper.cs" />
    <Compile Include="CSharp\Refactorings\AddBracesToSwitchSectionRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\InsertModifierRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\ExpandExpressionBodiedMemberRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\ExtractTypeDeclarationToNewDocumentRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\IntroduceFieldToLockOnRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\MergeInterpolationIntoInterpolatedStringRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\RemoveCommentRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\ReplaceHasFlagWithBitwiseOperationRefactoring.cs" />
    <Compile Include="CSharp\SwitchSectionStatementContainer.cs" />
    <Compile Include="CommentRemoveOptions.cs" />
    <Compile Include="CSharp\CSharpFactory.cs" />
    <Compile Include="CSharp\Internal\DetermineParameterHelper.cs" />
    <Compile Include="CSharp\IfElseChain.cs" />
    <Compile Include="CSharp\Extensions\SyntaxExtensions.cs" />
    <Compile Include="CSharp\PropertyKind.cs" />
    <Compile Include="CSharp\Refactorings\CallConfigureAwaitRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\ReplaceAnonymousMethodWithLambdaExpressionRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\AddBracesToIfElseRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\ExpandAssignmentExpressionRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\UseCompoundAssignmentRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\AttributeRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\ReplaceForEachWithForRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\ReplaceInterpolatedStringWithStringLiteralRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\DuplicateMemberDeclarationRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\RemoveBracesFromIfElseElseRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\ReplaceStringEmptyWithEmptyStringLiteralRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\SimplifyLambdaExpressionRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\SplitVariableDeclarationRefactoring.cs" />
    <Compile Include="CSharp\Refactorings\UseExpressionBodiedMemberRefactoring.cs" />
    <Compile Include="IdentifierUtility.cs" />
    <Compile Include="Symbol.cs" />
    <Compile Include="CSharp\CSharpUtility.cs" />
    <Compile Include="CSharp\SyntaxRewriters\CommentRemover.cs" />
    <Compile Include="CSharp\Refactorings\InlineAliasExpressionRefactoring.cs" />
    <Compile Include="CSharp\SyntaxRewriters\WhitespaceOrEndOfLineRemover.cs" />
    <Compile Include="CSharp\TypeAnalysisResult.cs" />
    <Compile Include="CSharp\Refactorings\ChangeTypeRefactoring.cs" />
    <Compile Include="CSharp\SyntaxRemover.cs" />
    <Compile Include="CSharp\MemberDeclarationComparer.cs" />
    <Compile Include="CSharp\MemberDeclarationInserter.cs" />
    <Compile Include="UniqueNameGenerator.cs" />
    <Compile Include="Extensions\DiagnosticsExtensions.cs" />
    <Compile Include="Extensions\DocumentExtensions.cs" />
    <Compile Include="Extensions\FileLinePositionSpanExtensions.cs" />
    <Compile Include="Extensions\ISymbolExtensions.cs" />
    <Compile Include="Extensions\SemanticModelExtensions.cs" />
    <Compile Include="Extensions\TextSpanExtensions.cs" />
    <Compile Include="Internal\IdentifierGenerator.cs" />
    <Compile Include="MetadataNames.cs" />
    <Compile Include="CSharp\ModifierUtility.cs" />
    <Compile Include="CSharp\Modifiers.cs" />
    <Compile Include="NameGenerator.cs" />
    <Compile Include="SelectedLinesInfo.cs" />
    <Compile Include="CSharp\SelectedStatementsInfo.cs" />
    <Compile Include="SelectedNodesInfo.cs" />
    <Compile Include="CSharp\BlockStatementContainer.cs" />
    <Compile Include="CSharp\StatementContainer.cs" />
    <Compile Include="SymbolRenamer.cs" />
    <Compile Include="CSharp\ModifierComparer.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensions.cs" />
    <Compile Include="Extensions\SyntaxNodeOrTokenExtensions.cs" />
    <Compile Include="Extensions\SyntaxTokenExtensions.cs" />
    <Compile Include="Extensions\SyntaxTokenListExtensions.cs" />
    <Compile Include="Extensions\SyntaxTreeExtensions.cs" />
    <Compile Include="Extensions\SyntaxTriviaExtensions.cs" />
    <Compile Include="GeneratedCodeAnalyzer.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="CSharp\SyntaxRewriters\TriviaRemover.cs" />
    <Compile Include="Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include="DefaultSymbolDisplayFormat.cs" />
    <Compile Include="TextUtility.cs" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="project.json" />
    <None Include="Roslynator.Utilities.snk" />
    <None Include="Roslynator.Utilities.nuspec" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Target Name="AfterBuild">
    <GetAssemblyIdentity AssemblyFiles="$(OutDir)\$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="AnalyzerAssemblyInfo" />
    </GetAssemblyIdentity>
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>