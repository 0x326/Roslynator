<h3>Introduction</h3>
<p>
    Roslyn-based extension that offers 100+ refactorings for C#. 
</p>

<h3>Links</h3>
<ul>
    <li>
        <a href="http://pihrt.net/Roslyn">C# Refactorings Website</a>
    </li>  
    <li>
        <a href="http://pihrt.net/Roslyn/Refactorings">List of Refactorings</a>
    </li>  
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/ChangeLog.md">Release Notes</a>
    </li>  
</ul>

<h3>Related Products</h3>
<ul>
    <li>
        <a href="http://visualstudiogallery.msdn.microsoft.com/e83c5e41-92c5-42a3-80cc-e0720c621b5e">C# Analyzers and Refactorings</a>
        <span> - Visual Studio extension that contains analyzers and refactorings.</span>
    </li>  
    <li>
        <a href="http://www.nuget.org/packages/CSharpAnalyzers">CSharpAnalyzers</a>
        <span> - NuGet package that contains only analyzers.</span>
    </li>  
</ul>

<h3>List of refactorings</h3>

<ul>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#access-element-using--instead-of-firstlastelementat-method">Access element using '[]' instead of 'First/Last/ElementAt' method</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-boolean-comparison">Add boolean comparison</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-braces-to-embedded-statement">Add braces to embedded statement</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-braces-to-if-else-chain">Add braces to if-else chain</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-braces-to-switch-section">Add braces to switch section</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-braces-to-switch-sections">Add braces to switch sections</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-cast-according-to-parameter-type">Add cast according to parameter type</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-cast-to-assignment-expression">Add cast to assignment expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-cast-to-return-statements-expression">Add cast to return statement's expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-cast-to-variable-declaration">Add cast to variable declaration</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-parameter-name-according-to-its-type-name">Add parameter name according to its type name</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-parameter-name-to-argument">Add parameter name to argument</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-parentheses">Add parentheses</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#add-using-statement">Add using statement</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#change-anyall-to-allany">Change 'Any/All' to 'All/Any'</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#change-foreach-variables-declared-type-according-to-expression">Change foreach variable's declared type according to expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#change-foreach-variables-declared-type-to-var">Change foreach variable's declared type to 'var'</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#change-methodpropertyindexer-type-according-to-return-statement">Change method/property/indexer type according to return statement</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#change-methodpropertyindexer-type-according-to-yield-return-statement">Change method/property/indexer type according to yield return statement</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#change-type-according-to-expression">Change type according to expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#change-variable-declaration-type">Change variable declaration type</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#check-parameter-for-null">Check parameter for null</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert--to-stringempty">Convert "" to string.Empty</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-conditional-expression-to-if-else">Convert conditional expression to if-else</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-constant-to-read-only-field">Convert constant to read-only field</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-for-to-foreach">Convert for to foreach</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-foreach-to-for">Convert foreach to for</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-interpolated-string-to-string-literal">Convert interpolated string to string literal</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-method-to-read-only-property">Convert method to read-only property</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-read-only-field-to-constant">Convert read-only field to constant</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-read-only-property-to-method">Convert read-only property to method</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-regular-string-literal-to-verbatim-string-literal">Convert regular string literal to verbatim string literal</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-string-literal-to-interpolated-string">Convert string literal to interpolated string</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-stringempty-to-">Convert string.Empty to ""</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-switch-to-if-else-chain">Convert switch to if-else chain</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-to-incrementdecrement-operator">Convert to increment/decrement operator</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-to-interpolated-string">Convert to interpolated string</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-to-prefixpostfix-operator">Convert to prefix/postfix operator</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-verbatim-string-literal-to-regular-string-literal">Convert verbatim string literal to regular string literal</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#convert-verbatim-string-literal-to-regular-string-literals">Convert verbatim string literal to regular string literals</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#duplicate-argument">Duplicate argument</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#duplicate-member">Duplicate member</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#duplicate-parameter">Duplicate parameter</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#expand-assignment-expression">Expand assignment expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#expand-coalesce-expression">Expand coalesce expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#expand-event">Expand event</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#expand-expression-bodied-member">Expand expression-bodied member</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#expand-lambda-expressions-body">Expand lambda expression's body</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#expand-object-initializer">Expand object initializer</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#expand-property">Expand property</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#expand-property-and-add-backing-field">Expand property and add backing field</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#extract-declaration-from-using-statement">Extract declaration from using statement</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#extract-expression-from-parentheses">Extract expression from parentheses</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#extract-generic-type">Extract generic type</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#extract-statements">Extract statement(s)</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-accessor-braces-on-multiple-lines">Format accessor braces on multiple lines</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-all-arguments-on-a-single-line">Format all arguments on a single line</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-all-parameters-on-a-single-line">Format all parameters on a single line</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-binary-expressions-on-multiple-lines">Format binary expressions on multiple lines</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-conditional-expression-on-multiple-lines">Format conditional expression on multiple lines</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-conditional-expression-to-a-single-line">Format conditional expression to a single line</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-each-argument-on-separate-line">Format each argument on separate line</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-each-parameter-on-separate-line">Format each parameter on separate line</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-expression-chain-on-a-single-line">Format expression chain on a single line</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-expression-chain-on-multiple-lines">Format expression chain on multiple lines</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-initializer-on-a-single-line">Format initializer on a single line</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#format-initializer-on-multiple-lines">Format initializer on multiple lines</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#introduce-constructor-from-selected-members">Introduce constructor from selected member(s)</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#make-member-abstract">Make member abstract</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#merge-attributes">Merge attributes</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#merge-string-literals">Merge string literals</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#merge-string-literals-into-multiline-string-literal">Merge string literals into multiline string literal</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#negate-binary-expression">Negate binary expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#negate-boolean-literal">Negate boolean literal</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#negate-operator">Negate operator</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#notify-property-changed">Notify property changed</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-all-comments">Remove all comments</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-all-comments-except-xml-comments">Remove all comments (except xml comments)</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-all-regions">Remove all regions</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-braces-from-if-else-chain">Remove braces from if-else chain</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-braces-from-switch-section">Remove braces from switch section</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-braces-from-switch-sections">Remove braces from switch sections</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-comment">Remove comment</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-member">Remove member</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-parameter-name-from-argument">Remove parameter name from argument</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#remove-property-initializer">Remove property initializer</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#rename-backing-field-according-to-property-name">Rename backing field according to property name</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#rename-foreach-variable-according-to-its-type-name">Rename foreach variable according to its type name</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#rename-localfieldconst-according-to-type-name">Rename local/field/const according to type name</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#rename-method-according-to-type-name">Rename method according to type name</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#rename-parameter-according-to-its-type-name">Rename parameter according to its type name</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#rename-property-according-to-type-name">Rename property according to type name</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#reverse-for-loop">Reverse for loop</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#split-attributes">Split attributes</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#swap-arguments">Swap arguments</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#swap-expressions-in-binary-expression">Swap expressions in binary expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#swap-expressions-in-conditional-expression">Swap expressions in conditional expression</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#swap-members">Swap members</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#swap-parameters">Swap parameters</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#swap-statements-in-if-else">Swap statements in if-else</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#uncomment">Uncomment</a>
    </li>
    <li>
        <a href="http://github.com/JosefPihrt/Pihrtsoft.CodeAnalysis/blob/master/Refactorings.md#use-expression-bodied-member">Use expression-bodied member</a>
    </li>
</ul>